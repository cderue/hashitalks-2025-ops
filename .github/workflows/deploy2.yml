name: Create Waypoint Application

on:
  workflow_dispatch:
    
jobs:
  create-waypoint-application:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Waypoint Application
        id: create-waypoint-application
        env:
          HCP_CLIENT_ID: ${{ secrets.SP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.SP_CLIENT_SECRET }}
          ORGANIZATION_ID: ${{ secrets.HCP_ORGANIZATION_ID }}
          PROJECT_ID: ${{ secrets.HCP_WAYPOINT_PROJECT_ID }}
          APP_NAME: human-talks-demo
          TEMPLATE_NAME: human-talks-demo
        run: |
          # Install dependencies
          pip install requests

          # Create the Python script to create the Waypoint application
          cat > run_waypoint_application.py << 'EOF'
          #!/usr/bin/env python3
          import os
          import json
          import time
          import requests
          
          # set log level to debug
          import logging
          logging.basicConfig(level=logging.DEBUG)
          
          # Get environment variables
          hcp_client_id = os.environ.get('HCP_CLIENT_ID')
          hcp_client_secret = os.environ.get('HCP_CLIENT_SECRET')
          organization_id = os.environ.get('ORGANIZATION_ID')
          project_id = os.environ.get('PROJECT_ID')
          app_name = os.environ.get('APP_NAME')
          template_name = os.environ.get('TEMPLATE_NAME')
          #action_params_str = os.environ.get('ACTION_PARAMS', '{}')
          
          # Get HCP auth token
          auth_url = "https://auth.idp.hashicorp.com/oauth2/token"
          auth_headers = {
              "Content-Type": "application/x-www-form-urlencoded"
          }
          auth_data = {
              "client_id": hcp_client_id,
              "client_secret": hcp_client_secret,
              "grant_type": "client_credentials",
              "audience": "https://api.hashicorp.cloud"
          }
          
          auth_response = requests.post(auth_url, headers=auth_headers, data=auth_data)
          if auth_response.status_code != 200:
              print(f"Error authenticating with HCP: {auth_response.text}")
              exit(1)
          
          access_token = auth_response.json().get('access_token')
          
          # Prepare headers for API requests
          headers = {
              "Authorization": f"Bearer {access_token}",
              "Content-Type": "application/json"
          }
          
          # Create the Waypoint application
          run_action_url = f"https://api.cloud.hashicorp.com/waypoint/2024-11-22/organizations/{organization_id}/projects/{project_id}/applications/from-template"
          
          action_payload = {
              "name": f"{app_name}",
              "application_template": {
                  "name": f"{template_name}"
              },
              "variables": [
                {
                  "name": "app",
                  "value": f"{app_name}",
                  "variable_type": "string"
                },
                {
                  "name": "repository_url",
                  "value": "${{ github.server_url }}/${{ github.repository }}",
                  "variable_type": "string"
                },
                {
                  "name": "repository_branch",
                  "value": "main",
                  "variable_type": "string"
                }
              ]
          }
          
          print(f"Creating Waypoint application '{app_name}'")
          application_response = requests.post(run_action_url, headers=headers, json=action_payload)
          
          if application_response.status_code != 200:
              print(f"Error creating Waypoint application: {application_response.text}")
              exit(1)
          
          application_data = application_response.json()
          application_id = application_data.get('application', {}).get('id')
          
          if not application_id:
              print("Error: No application ID returned from application creation")
              exit(1)
          
          print(f"Waypoint application created. Application ID: {application_id}")
          EOF
          
          # Make the script executable
          chmod +x run_waypoint_application.py
          
          # Run the action
          python run_waypoint_application.py
