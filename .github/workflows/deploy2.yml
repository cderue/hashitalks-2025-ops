name: Run Waypoint Action

on:
  workflow_dispatch:
    
jobs:
  run-waypoint-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Waypoint Action
        id: run-waypoint-action
        env:
          HCP_CLIENT_ID: ${{ secrets.SP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.SP_CLIENT_SECRET }}
          ORGANIZATION_ID: ${{ secrets.HCP_ORGANIZATION_ID }}
          PROJECT_ID: ${{ secrets.HCP_WAYPOINT_PROJECT_ID }}
          APP_NAME: human-talks-demo
          ACTION_NAME: Merge Branch
        run: |
          # Install dependencies
          pip install requests

          # Create the Python script to run the Waypoint action
          cat > run_waypoint_action.py << 'EOF'
          #!/usr/bin/env python3
          import os
          import json
          import time
          import requests
          
          # set log level to debug
          import logging
          logging.basicConfig(level=logging.DEBUG)
          
          # Get environment variables
          hcp_client_id = os.environ.get('HCP_CLIENT_ID')
          hcp_client_secret = os.environ.get('HCP_CLIENT_SECRET')
          organization_id = os.environ.get('ORGANIZATION_ID')
          project_id = os.environ.get('PROJECT_ID')
          app_name = os.environ.get('APP_NAME')
          action_name = os.environ.get('ACTION_NAME')
          #action_params_str = os.environ.get('ACTION_PARAMS', '{}')
          
          # Get HCP auth token
          auth_url = "https://auth.idp.hashicorp.com/oauth2/token"
          auth_headers = {
              "Content-Type": "application/x-www-form-urlencoded"
          }
          auth_data = {
              "client_id": hcp_client_id,
              "client_secret": hcp_client_secret,
              "grant_type": "client_credentials",
              "audience": "https://api.hashicorp.cloud"
          }
          
          auth_response = requests.post(auth_url, headers=auth_headers, data=auth_data)
          if auth_response.status_code != 200:
              print(f"Error authenticating with HCP: {auth_response.text}")
              exit(1)
          
          access_token = auth_response.json().get('access_token')
          
          # Prepare headers for API requests
          headers = {
              "Authorization": f"Bearer {access_token}",
              "Content-Type": "application/json"
          }
          
          # Run the Waypoint action
          run_action_url = f"https://api.cloud.hashicorp.com/waypoint/2024-11-22/organizations/{organization_id}/projects/{project_id}/action"
          
          action_payload = {
              "action_ref": {
                  "name": f"{action_name}"
              }
          }
          
          print(f"Running Waypoint action '{action_name}' for app '{app_name}'")
          run_response = requests.put(run_action_url, headers=headers, json=action_payload)
          
          if run_response.status_code != 200:
              print(f"Error running Waypoint action: {run_response.text}")
              exit(1)
          
          run_data = run_response.json()
          job_id = run_data.get('action_run', {}).get('id')
          
          if not job_id:
              print("Error: No job ID returned from action run")
              exit(1)
          
          print(f"Waypoint action started. Job ID: {job_id}")
          EOF
          
          # Make the script executable
          chmod +x run_waypoint_action.py
          
          # Run the action
          python run_waypoint_action.py
